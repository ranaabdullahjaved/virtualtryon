// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
      provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("customer") // <-- Add this line
  accounts      Account[]
  sessions      Session[]
  orders        Order[]
  tryOnData     VirtualTryOnData[]
  password      String
}

model Account {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  userId   String @db.ObjectId
  user     User   @relation(fields: [userId], references: [id])
  // Add other fields as needed
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  user         User     @relation(fields: [userId], references: [id])
  // Add other fields as needed
}

model Order {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  // Add other fields as needed
}

model VirtualTryOnData {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  // Add other fields as needed
}

model Brand {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String    @unique
  logoUrl   String
  products  Product[]
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Float
  imageUrl    String[] @default([])
  stock       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  virtualTryOnFile String?
  brandId     String   @db.ObjectId
  brand       Brand    @relation(fields: [brandId], references: [id])
}